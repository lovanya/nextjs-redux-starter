// scss mixin

// 为css3属性添加浏览器兼容前缀
@mixin vendor($prop, $style) {
  -webkit-#{$prop}: $style; // Webkit 前缀
  -moz-#{$prop}: $style; // Mozilla 前缀
  -ms-#{$prop}: $style; // IE 前缀
  -o-#{$prop}: $style; // Opera 前缀
  #{$prop}: $style;
}

// border-radius
@mixin borderRadius($style) {
  @include vendor(border-radius, $style);
}

// 盒模型大小计算方式，content-box 盒子实际高度 = height（content height） + padding + border，border-box 盒子实际高度 = height（content + padding + border），
@mixin boxSizing($style: border-box) {
  @include vendor(box-sizing, $style);
}

// transform
@mixin transform($style) {
  @include vendor(transform, $style);
}

// box-shadow
@mixin boxShadow($style) {
  @include vendor(box-shadow, $style);
}

// 设置流体布局
@mixin flex($direction: row, $just-content: start, $align-items: center) {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  flex-direction: $direction;
  justify-content: $just-content;
  align-items: $align-items;
}

// 表单元素垂直居中对齐（也可设置顶对齐，底对齐），@alignment：middle top bottom
@mixin formElementVerticalAlign($alignment: middle) {
  display: inline-block;
  *display: inline;
  zoom: 1;

  vertical-align: $alignment;
  *vertical-align: auto;
}

// 修复使用transform属性时，文字出现模糊的问题
@mixin fixBlurring() {
  // 开启文字抗锯齿渲染
  // -webkit-font-smoothing: antialiased; /*chrome、safari*/
  // -moz-osx-font-smoothing: grayscale; /*firefox*/
  // font-smoothing: antialiased;

  // // FIXED：transform 模糊问题 backface-visibility 属性定义当元素不面向屏幕时是否可见。
  // -webkit-backface-visibility: hidden;
  // -moz-backface-visibility: hidden;
  // -ms-backface-visibility: hidden;
  // backface-visibility: hidden;
  display: inline-table;
}

// 居中
@mixin center() {
  position: absolute;
  top: 50%;
  left: 50%;

  @include fixBlurring();
  @include transform(
    translate(-50%, -50%)
  ); // FIXED: transform 抖动问题 TranslateZ also works as it is a hack to add hardware acceleration to the animation.
}

// 水平居中
@mixin centerX() {
  position: absolute;
  left: 50%;

  @include fixBlurring();
  @include transform(translateX(-50%));
}

// 垂直居中
@mixin centerY() {
  position: absolute;
  top: 50%;

  @include fixBlurring();
  @include transform(translateY(-50%));
}

// 居中(容器需要有固定宽高)
@mixin center-wh($width, $height) {
  position: absolute;
  top: 50%;
  left: 50%;

  margin-left: -($width / 2);
  margin-top: -($height / 2);
  width: $width;
  height: $height;
}

// 水平居中(容器需要有固定宽度)
@mixin centerX-w($width) {
  position: absolute;
  left: 50%;

  margin-left: -($width / 2);
  width: $width;
}

// 垂直居中(容器需要有固定高高)
@mixin centerY-h($height) {
  position: absolute;
  top: 50%;

  margin-top: -($height / 2);
  height: $height;
}

// 浮动（主要针对PC端了...）
@mixin float($side: left) {
  float: $side;
  _display: inline;
}

// 清除浮动(其实很多时候，clear-fix也被提取为单类使用)
@mixin clearfix() {
  display: block;

  &:after {
    content: '.';
    display: block;
    height: 0;
    clear: both;
    visibility: hidden;
  }

  * html & {
    height: 1px;
  }
}

// 截取文本(仅针对单行)
@mixin singleLineEllipsis($height, $line-height, $width: auto) {
  width: $width;
  height: $height;
  line-height: $line-height;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// 设置透明度
@mixin opacity($val) {
  filter: alpha(opacity=$val);
  opacity: $val / 100;
}

// 文本不换行，省略号结尾
@mixin ellipsis() {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// 文本不换行
@mixin clip {
  overflow: hidden;
  text-overflow: clip;
  white-space: nowrap;
}

// 两行文本不换行，省略号结尾，只适用于webkit浏览器器
@mixin ellipsis-for-2-lines {
  overflow: hidden;
  text-overflow: ellipsis;
  text-overflow: -o-ellipsis-lastline;
  line-clamp: 2;
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
}

// 最小宽度（主要针对PC端了...）
@mixin minWidth($width) {
  min-width: $width;
  width: auto !important;
  _width: $width;
}

// 最小高度（主要针对PC端了...）
@mixin minHeight($height) {
  min-height: $height;
  height: auto !important;
  _height: $height;
}

// 设置背景图片
@mixin setBgImage(
  $url: '~@/assets/images/no-img.png',
  $repeat: no-repeat,
  $position: center,
  $size: auto
) {
  background-image: url(#{$url});
  background-repeat: $repeat;
  background-position: $position;
  background-size: $size;
}

@mixin layout() {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  zoom: 1;
  overflow: hidden;
}

// 隐藏滚动条
@mixin hide-scroll-bar {
  &::-webkit-scrollbar {
    display: none;
    /* Hide scrollbar for Chrome, Safari and Opera */
  }

  scrollbar-width: none;
  /* Firefox */
  -ms-overflow-style: none;
  /* Hide scrollbar for IE and Edge */
}

// 三栏组件第二栏列表项
@mixin three-column-second-list-item {
  padding: 8px 16px;
  cursor: pointer;

  &:hover {
    background-color: $second-column-list-item-hover-color;
  }

  transition: border-color 0.3s, background-color 0.3s, color 0.3s;
}

@mixin button($bg) {
  background: $bg;
  color: $white-color;
  cursor: pointer;

  &:hover {
    background: lighten($bg, 10%);
  }

  &:active {
    background: $bg;
  }

  &.disabled {
    cursor: not-allowed;
    background: lighten($bg, 40%);
  }
}

@mixin setRotating() {
  animation-duration: 1s;
  animation-timing-function: linear;
  animation-delay: 0s;
  animation-iteration-count: infinite;
  animation-direction: normal;
  animation-fill-mode: none;
  animation-play-state: running;
  animation-name: rotating;
}

@mixin mini-scollbar($width: 4px) {
  &::-webkit-scrollbar {
    width: $width;
    height: $width;
  }
  &::-webkit-scrollbar-thumb {
    background: #ccc;
    border-radius: $width;
  }
}
